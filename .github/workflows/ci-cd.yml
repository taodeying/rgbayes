name: ci-cd

on: [push, pull_request]

env:
  CACHE_NUMBER: 0  # increase to reset cache manually

jobs:
  ci:
    # Set up operating system
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}

    # Define job steps
    steps:
      - uses: actions/checkout@v3

      - name: CONDA env
        uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: rgbayes
          python-version: "3.9"

      - name: Cache CONDA env
        uses: actions/cache@v3
        with:
          path: ${{ env.CONDA }}/envs
          key: conda-${{ runner.os }}--${{ runner.arch }}-${{ hashFiles('etc/environment-caching.yml') }}-${{ env.CACHE_NUMBER }}
        id: cache

      - name: Update CONDA environment
        run: conda env update -f environment.yml
        if: steps.cache.outputs.cache-hit != 'true'
        
      - name: Test CONDA
        run: |
          conda info
          conda list
          conda config --show

      - name: Install package
        run: poetry install

      - name: Test with pytest
        run: poetry run pytest tests/ --cov=rgbayes --cov-report=xml

      - name: Use Codecov to track coverage
        uses: codecov/codecov-action@v2
        with:
          files: ./coverage.xml   # coverage report

      - name: Build documentation
        run: poetry run make html --directory docs/

  cd:
    # Only run this job if the "ci" job passes
    needs: ci

    # Only run this job if new work is pushed to "main"
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    # Set up operating system
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}

    # Define job steps
    steps:
      - uses: actions/checkout@v3

      - name: CONDA env
        uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: rgbayes
          python-version: "3.9"

      - name: Cache CONDA env
        uses: actions/cache@v3
        with:
          path: ${{ env.CONDA }}/envs
          key: conda-${{ runner.os }}--${{ runner.arch }}-${{ hashFiles('etc/environment-caching.yml') }}-${{ env.CACHE_NUMBER }}
        id: cache

      - name: Update CONDA environment
        run: conda env update -f environment.yml
        if: steps.cache.outputs.cache-hit != 'true'
        
      - name: Test CONDA
        run: |
          conda info
          conda list
          conda config --show

      - name: Install package
        run: poetry install

      - name: Use Python Semantic Release to prepare release
        env:
          # This token is created automatically by GH Actions
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
            git config user.name github-actions
            git config user.email github-actions@github.com
            poetry run semantic-release publish

      #- name: Publish to TestPyPI
      #  uses: pypa/gh-action-pypi-publish@release/v1
      #  with:
      #    user: __token__
      #    password: ${{ secrets.TEST_PYPI_API_TOKEN }}
      #    repository_url: https://test.pypi.org/legacy/
#
#      - name: Test install from TestPyPI
#        run: |
#            pip install \
#            --index-url https://test.pypi.org/simple/ \
#            --extra-index-url https://pypi.org/simple \
#            robust_gbayes
#
#      - name: Publish to PyPI
#        uses: pypa/gh-action-pypi-publish@release/v1
#        with:
#          user: __token__
#          password: ${{ secrets.PYPI_API_TOKEN }}

      # Publish to gh-pages
      - name: Use gh-pages to build Doc
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs/_build/html
